services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: always
    environment:
      - TERM=linux
      # increases the log level from info to debug
      - GF_LOG_LEVEL=debug
    ports:
      - '3000:3000'
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    networks:
      - lsst

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - lsst

  ## Relevant links for the following container which is used for
  ## exporting performance metrics from Kafka to Prometheus
  # https://prometheus.github.io/jmx_exporter/
  # https://github.com/danielqsj/kafka_exporter
  # https://www.redpanda.com/guides/kafka-performance-kafka-monitoring

  # Kafka Exporter for Prometheus metrics
  kafka-exporter:
    # Image for Kafka Exporter
    image: danielqsj/kafka-exporter
    # Container name for Kafka Exporter
    container_name: kafka-exporter
    # Restart the container on failure
    restart: always
    depends_on:
      # Ensure Zookeeper and Kafka broker start before MirrorMaker 2
      zookeeper1:
        condition: service_healthy
      # broker1:
      #   condition: service_healthy
      #   restart: true
    command:
      # Command to connect Kafka Exporter to Kafka broker
      - "--kafka.server=broker1:9092"
      - "--log.level=debug"
    ports:
      # Port mapping for Kafka Exporter metrics
      - 9308:9308
    networks:
      # Attach to the 'lsst' network
      - lsst

  # alertmanager:
  #   image: prom/alertmanager:latest
  #   restart: unless-stopped
  #   ports:
  #     - '9093:9093'
  #   volumes:
  #     - ./alertmanager:/config
  #     - alertmanager-data:/data
  #   command: --config.file=/config/alertmanager.yml --log.level=debug
  #   networks:
  #     - monitoring

volumes:
  grafana-data: {}
  prometheus-data: {}
  # alertmanager-data: {}